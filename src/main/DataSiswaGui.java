/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import java.sql.*;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author acer
 */
public class DataSiswaGui extends javax.swing.JFrame {

    /**
     * Creates new form DataSiswa
     */
    public DataSiswaGui() {
        initComponents();
        setLocationRelativeTo(null);
        readData();
        initTableColumn();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        siswa_tabel = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        tambah_button = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        jLabel1.setText("Data Siswa");

        siswa_tabel.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "NIS", "Nama", "Kelas", "Jurusan"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        siswa_tabel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                siswa_tabelMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(siswa_tabel);

        jButton1.setText("Hapus");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tambah_button.setText("Tambah");
        tambah_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tambah_buttonActionPerformed(evt);
            }
        });

        jButton3.setText("Ubah");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Refresh");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tambah_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(247, 247, 247)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(tambah_button)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tambah_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tambah_buttonActionPerformed
        showTambahDialog();
    }//GEN-LAST:event_tambah_buttonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        readData();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void siswa_tabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_siswa_tabelMouseClicked
        barisPilihan = siswa_tabel.getSelectedRow();
    }//GEN-LAST:event_siswa_tabelMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        deleteData(barisPilihan);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        showUpdateDialog(barisPilihan);
    }//GEN-LAST:event_jButton3ActionPerformed
    
    private void deleteData(int barisPilihan){
        String idSiswa  = siswa_tabel.getValueAt(barisPilihan, 1).toString();
        int confirm     = JOptionPane.showConfirmDialog(null, "Yakin?");
        if(confirm == 0){
            try {
            connection      = DB.getConnection();
            preStatement    = connection.prepareStatement("DELETE FROM siswa WHERE nis = ?");
            preStatement.setInt(1, Integer.parseInt(idSiswa));
            int success = preStatement.executeUpdate();
            if(success == 1){
                defaultTableModel.getDataVector().removeAllElements();
                readData();
            }
            } catch (SQLException e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(null, "Ada Kesalahan Query");
            }finally {
                try {
                    connection.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                }
            }
        }
    }
    private void readData(){
        String[] kolomTabel = {"NIS", "Nama", "Jenis Kelamin","Kelas", "Jurusan"};
        defaultTableModel   = new DefaultTableModel(null, kolomTabel);
        try {
            connection      = DB.getConnection();
            preStatement    = connection.prepareStatement("SELECT * FROM siswa");
            result          = preStatement.executeQuery();
            while(result.next()){
                String nis              = result.getString("nis");
                String nama             = result.getString("nama");
                String jenisKelamin     = result.getString("jeniskelamin");
                String kelas            =    result.getString("kelas");
                String jurusan          = result.getString("jurusan");
                defaultTableModel.addRow(new String[]{nis, nama, jenisKelamin,kelas, jurusan});
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ada Kesalahan Query");
        }finally{
            try {
                connection.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
        siswa_tabel.setModel(defaultTableModel);
        initTableColumn();
    }
    private void showUpdateDialog(int barisPilihan){
        String idSiswa              = siswa_tabel.getValueAt(barisPilihan, 1).toString();
        ManageDataDialog updateData = new ManageDataDialog(this, true, "edit", idSiswa);
        updateData.setVisible(true);
    }
    private void showTambahDialog(){
        ManageDataDialog tambahData = new ManageDataDialog(this, true, "tambah", "");
        tambahData.setVisible(true);
    }
    /**
     * @param args the command line arguments
     */
    private void initTableColumn(){
        DefaultTableCellRenderer dtr = new DefaultTableCellRenderer(); 
        dtr.setHorizontalAlignment(JLabel.CENTER);
        siswa_tabel.setAutoResizeMode(JTable.AUTO_RESIZE_LAST_COLUMN);
        if (siswa_tabel.getColumnModel().getColumnCount() > 0) {
        siswa_tabel.getColumnModel().getColumn(0).setMaxWidth(70);
        siswa_tabel.getColumnModel().getColumn(1).setMinWidth(100);
        siswa_tabel.getColumnModel().getColumn(2).setMaxWidth(75);
        siswa_tabel.getColumnModel().getColumn(3).setMaxWidth(70);
        for(int i = 0; i < siswa_tabel.getColumnCount(); i++){
            siswa_tabel.getColumnModel().getColumn(i).setCellRenderer(dtr);
        }
        ((DefaultTableCellRenderer)siswa_tabel.getTableHeader().getDefaultRenderer()).setHorizontalAlignment(JLabel.CENTER);
//        siswa_tabel.getColumnModel().getColumn(0).setCellRenderer(dtr);
//        siswa_tabel.getColumnModel().getColumn(1).setCellRenderer(dtr);
//        siswa_tabel.getColumnModel().getColumn(2).setCellRenderer(dtr);
//        siswa_tabel.getColumnModel().getColumn(3).setCellRenderer(dtr);
        }
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DataSiswaGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DataSiswaGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DataSiswaGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DataSiswaGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DataSiswaGui().setVisible(true);
            }
        });
    }
    
    
    int barisPilihan = 0;
    ResultSet result;
    Connection connection;
    PreparedStatement preStatement;
    DefaultTableModel defaultTableModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable siswa_tabel;
    private javax.swing.JButton tambah_button;
    // End of variables declaration//GEN-END:variables
}
