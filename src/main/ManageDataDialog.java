/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main;

import enumResources.EnumJurusan;
import enumResources.EnumBulan;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Enumeration;
import javax.swing.AbstractButton;
import javax.swing.ButtonModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.text.JTextComponent;
import org.apache.commons.lang3.StringUtils;
import org.apache.commons.text.WordUtils;
import utils.CustomDateFormatter;
/**
 *
 * @author acer
 */
public class ManageDataDialog extends javax.swing.JDialog {

    /**
     * Creates new form ManageDataDialog
     */
    public ManageDataDialog(java.awt.Frame parent, boolean modal, String action, String nis) {
        super(parent, modal);
        initComponents();
        initJurusan();
        initTanggal();
        initBulan();
        initRadioButton();
        setLocationRelativeTo(null);
        manage_label.setText("Tambah Data");
        this.action = action;
        if(action.equals("edit")){
            manage_label.setText("Edit Data");
            nis_textField.setEditable(false);
            showData(nis);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        gender_buttonGroup = new javax.swing.ButtonGroup();
        manage_label = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        namaLengkap_textField = new javax.swing.JTextField();
        nis_textField = new javax.swing.JTextField();
        tingkatKelas_comboBox = new javax.swing.JComboBox<>();
        jurusan_comboBox = new javax.swing.JComboBox<>();
        simpan_button = new javax.swing.JButton();
        kejuruanKelas_label = new javax.swing.JLabel();
        angkaKelas_comboBox = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        alamat_textField = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        bulan_comboBox = new javax.swing.JComboBox<>();
        tanggal_comboBox = new javax.swing.JComboBox<>();
        tahun_textField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        manage_label.setFont(new java.awt.Font("Verdana", 1, 18)); // NOI18N
        manage_label.setText("Manage Label");

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel2.setText("NIS");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel3.setText("Nama Lengkap");

        jLabel4.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel4.setText("Kelas");

        jLabel5.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel5.setText("Jurusan");

        tingkatKelas_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "X", "XI", "XII" }));

        jurusan_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jurusan_comboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jurusan_comboBoxActionPerformed(evt);
            }
        });

        simpan_button.setText("Simpan");
        simpan_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpan_buttonActionPerformed(evt);
            }
        });

        kejuruanKelas_label.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        kejuruanKelas_label.setText("RPL");

        angkaKelas_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4" }));

        jLabel6.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel6.setText("Jenis Kelamin");

        jLabel7.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel7.setText("Tanggal Lahir");

        jLabel8.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        jLabel8.setText("Alamat");

        alamat_textField.setText("Nama Kota");
        alamat_textField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                alamat_textFieldFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                alamat_textFieldFocusLost(evt);
            }
        });

        jRadioButton1.setText("Laki - laki");
        jRadioButton1.setActionCommand("L");

        jRadioButton2.setText("Perempuan");
        jRadioButton2.setActionCommand("P");

        bulan_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        tanggal_comboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(tanggal_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bulan_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tahun_textField, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(68, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(manage_label)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tingkatKelas_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(kejuruanKelas_label)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(angkaKelas_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jurusan_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(alamat_textField, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                                .addComponent(nis_textField)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jRadioButton1)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jRadioButton2))
                                .addComponent(namaLengkap_textField)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(simpan_button)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(manage_label)
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nis_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(namaLengkap_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(bulan_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tanggal_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tahun_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(alamat_textField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jurusan_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(tingkatKelas_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(kejuruanKelas_label)
                    .addComponent(angkaKelas_comboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(simpan_button)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void simpan_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpan_buttonActionPerformed
        if(action.equals("edit")) {
            updateData();
        }
        else if(action.equals("tambah")) {
            simpanData();
        }
    }//GEN-LAST:event_simpan_buttonActionPerformed

    private void jurusan_comboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jurusan_comboBoxActionPerformed
        updateAkronimKelas(jurusan_comboBox.getSelectedItem().toString());
    }//GEN-LAST:event_jurusan_comboBoxActionPerformed

    private void alamat_textFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_alamat_textFieldFocusGained
        clearPlaceholder(alamat_textField, "Nama Kota");
    }//GEN-LAST:event_alamat_textFieldFocusGained

    private void alamat_textFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_alamat_textFieldFocusLost
        setPlaceHolder(alamat_textField, "Nama Kota");
    }//GEN-LAST:event_alamat_textFieldFocusLost
    
    //<editor-fold defaultstate="collapsed" desc="CRUD Operation Method">
    private void updateData(){
        int nis         = Integer.parseInt(nis_textField.getText());
        String nama     = namaLengkap_textField.getText();
        String jenisKelamin = getPilihanJenKel();
        String tglLahir = CustomDateFormatter.formatToMySqlDatePattern(getTanggalLahir());
        String alamat = alamat_textField.getText();
        String jurusan  = jurusan_comboBox.getSelectedItem().toString();
        String kelas    = tingkatKelas_comboBox.getSelectedItem().toString() + " " + kejuruanKelas_label.getText()
                        + " " + angkaKelas_comboBox.getSelectedItem().toString();
        try {
            connection  = DB.getConnection();
            int success = 0;
            String sql  = "UPDATE siswa SET nama = ?, jeniskelamin = ?, tanggal_lahir = ?, alamat = ?, kelas = ?, jurusan = ? WHERE nis = ?";
            preStatement = connection.prepareStatement(sql);
            preStatement.setString(1, nama);
            preStatement.setString(2, jenisKelamin);
            preStatement.setString(3, tglLahir);
            preStatement.setString(4, alamat);
            preStatement.setString(5, kelas);
            preStatement.setString(6, jurusan);
            preStatement.setInt(7, nis);
            success = preStatement.executeUpdate();
            if(success == 1){
                JOptionPane.showMessageDialog(null, "Data Berhasil Diubah");
            }else if(success == 0){
                JOptionPane.showMessageDialog(null, "Gagal Mengubah Data");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ada Kesalahan Query");
        }finally{
            try {
                connection.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }
    private void showData(String nis){
        try {
            connection      = DB.getConnection();
            preStatement = connection.prepareStatement("SELECT * FROM siswa WHERE nis = ?");
            preStatement.setInt(1, Integer.parseInt(nis));
            result = preStatement.executeQuery();
            result.next();
            nis_textField.setText(result.getString("nis"));
            namaLengkap_textField.setText(result.getString("nama"));
            //////////////////////////////////////////////////////////
            String jenKel = result.getString("jeniskelamin");
            Enumeration<AbstractButton> e = null;
            for (e = gender_buttonGroup.getElements() ; e.hasMoreElements();) {
                JRadioButton rButton = (JRadioButton) e.nextElement();
                if (rButton.getActionCommand().equals(jenKel)) {
                    rButton.setSelected(true);
                }
            }
            String tglLahir = CustomDateFormatter.formatToJavaDatePattern(result.getString("tanggal_lahir"));
            String[] subTanggal = tglLahir.split("-");
            tanggal_comboBox.setSelectedIndex(Integer.parseInt(subTanggal[0]) - 1);
            bulan_comboBox.setSelectedIndex(Integer.parseInt(subTanggal[1]) - 1);
            tahun_textField.setText(subTanggal[2]);
            //////////////////////////////////////////////////////////
            alamat_textField.setText(result.getString("alamat"));
            jurusan_comboBox.setSelectedItem(result.getString("jurusan"));
            
            String kelas        = result.getString("kelas");
            kelas               = kelas.replaceAll("\\s", ".") + ".";
            String[] subKelas   = new String[3];
            int pos = 0;
            while(!kelas.equals("")){
                subKelas[pos] = StringUtils.substringBefore(kelas, ".");
                kelas = StringUtils.remove(kelas, subKelas[pos] + ".");
                pos++;
            }
            tingkatKelas_comboBox.setSelectedItem(subKelas[0]);
            kejuruanKelas_label.setText(subKelas[1]);
            angkaKelas_comboBox.setSelectedItem(subKelas[2]);
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ada Kesalahan Query");
        }finally{
            try {
                connection.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }
    private void simpanData() {
        String nis      = nis_textField.getText();
        String nama     = namaLengkap_textField.getText();
        String jurusan  = jurusan_comboBox.getSelectedItem().toString();
        String jenis_kelamin = getPilihanJenKel();
        String tgl_lahir = CustomDateFormatter.formatToMySqlDatePattern(getTanggalLahir());
        String alamat = alamat_textField.getText();
        String kelas    = tingkatKelas_comboBox.getSelectedItem().toString() + " " + kejuruanKelas_label.getText()
                        + " " + angkaKelas_comboBox.getSelectedItem().toString();
        try {
            connection      = DB.getConnection();
            int success     = 0;
            preStatement    = connection.prepareStatement("INSERT INTO db_sekolah.siswa(nis, nama, jeniskelamin, tanggal_lahir, alamat, kelas, jurusan) VALUES(?, ?, ?, ?, ?, ?, ?)");
            preStatement.setString(1, nis);
            preStatement.setString(2, nama);
            preStatement.setString(3, jenis_kelamin);
            preStatement.setString(4, tgl_lahir);
            preStatement.setString(5, alamat);
            preStatement.setString(6, kelas);
            preStatement.setString(7, jurusan);
            success = preStatement.executeUpdate();
            if(success == 1){
                JOptionPane.showMessageDialog(null, "Data Berhasil Ditambahkan");
            }else if(success == 0){
                JOptionPane.showMessageDialog(null, "Data Gagal Ditambahkan");
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, "Ada Kesalahan Query");
            this.dispose();
        }finally{
            try {
                connection.close();
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }
    //</editor-fold>
    
    private void setPlaceHolder(JTextComponent textComponent, String placeholder) {
        if (textComponent instanceof JTextField) {
            textComponent = (JTextField) textComponent;
        }else if (textComponent instanceof JTextArea) {
            textComponent = (JTextArea) textComponent;
        }
        if (textComponent.getText().isEmpty()) {
            textComponent.setText(placeholder);
        }
        
    }
    private void clearPlaceholder(JTextComponent textComponent, String placeholder) {
        if (textComponent instanceof JTextField) {
            textComponent = (JTextField) textComponent;
        }else if (textComponent instanceof JTextArea) {
            textComponent = (JTextArea) textComponent;
        }
        if (textComponent.getText().equals(placeholder)) {
            textComponent.setText("");
        }
    }
    
    private void updateAkronimKelas(String pilihan){
        for(String jurusan : kejuruan){
            if(pilihan.equals(jurusan)){
                kejuruanKelas_label.setText(createAkronim(jurusan));
            }
        }
    }
    private String createAkronim(String kalimat){
        if(kalimat.equals("Multimedia")){
            return kalimat = "MM";
        }
        kalimat = kalimat.replaceAll("\\s", ".") + ".";//spasi di replace titik, akhir kalimat di concate titik
            String[] akronim    = new String[4];
            int pos             = 0;
            while(!kalimat.equals("")){
                //setiap kata jadi terpisah oleh titik
                akronim[pos]    = StringUtils.substringBefore(kalimat, ".");//cut kata sebelum titik
                kalimat         = StringUtils.remove(kalimat, akronim[pos] + ".");//hapus kata yang telah di cut
                akronim[pos]    = String.valueOf(akronim[pos].charAt(0));//cut & simpan inisial dari kata barusan
                pos++;
            }
            //akronim dari kata tadi di concate ke satu string
            for(String acronym : akronim){
                if(acronym != null){
                    kalimat = kalimat + acronym;
                }
            }
        return kalimat;
    }
    
    private String getOrdinalBulan() {
        EnumBulan bulan = EnumBulan.valueOf(String.valueOf(bulan_comboBox.getSelectedItem().toString().toUpperCase()));
        return String.valueOf(bulan.ordinal());
    }
    private String getTanggalLahir() {
        String d = tanggal_comboBox.getSelectedItem().toString();
        d = (d.length() == 1) ? "0" + d : d;
        String m = String.valueOf(Integer.parseInt(getOrdinalBulan()) + 1) ;
        m = (m.length() == 1) ? "0" + m : m;
        return d + "-" + m + "-" + tahun_textField.getText();
    }
    private String getPilihanJenKel() {
        ButtonModel selectedButton = gender_buttonGroup.getSelection();
        return selectedButton.getActionCommand();
    }
    private int getJumlahJurusan(){
        EnumJurusan[] jumlah = EnumJurusan.values();
        return jumlah.length;
    }
    
    //<editor-fold defaultstate="collapsed" desc="Initializer Methods">
    private void initRadioButton() {
        gender_buttonGroup.add(jRadioButton1);
        gender_buttonGroup.add(jRadioButton2);
    }
    private void initJurusan() {
        int ord = 0;
        kejuruan = new String[getJumlahJurusan()];
        for (EnumJurusan jurusan : EnumJurusan.values()) {
            kejuruan[ord] = jurusan.toString().replaceAll("[\\_]", " ");
            kejuruan[ord] = WordUtils.capitalizeFully(kejuruan[ord]);
            ord++;
        }
        DefaultComboBoxModel jurusan_cbModel = new DefaultComboBoxModel(kejuruan);
        jurusan_comboBox.setModel(jurusan_cbModel);
    }
    private void initTanggal() {
        String[] tanggal = new String[31];
        for (int i = 0; i < tanggal.length; i++) {
            tanggal[i] = String.valueOf(i + 1);
        }
        DefaultComboBoxModel tanggal_cbModel = new DefaultComboBoxModel(tanggal);
        tanggal_comboBox.setModel(tanggal_cbModel);
    }
    private void initBulan() {
        int ord = 0;
        arrBulan = new String[12];
        for (EnumBulan bulan : EnumBulan.values()) {
            arrBulan[ord] = bulan.toString().replaceAll("[\\_]", " ");
            arrBulan[ord] = WordUtils.capitalizeFully(arrBulan[ord]);
            ord++;
        }
        DefaultComboBoxModel jurusan_cbModel = new DefaultComboBoxModel(arrBulan);
        bulan_comboBox.setModel(jurusan_cbModel);
    }
    //</editor-fold>
    /**
     * @param args the command line arguments
     */
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageDataDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageDataDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageDataDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageDataDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
    }
    String action;
    String[] kejuruan;
    String[] arrBulan;
    ResultSet result;
    PreparedStatement preStatement;
    Connection connection;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField alamat_textField;
    private javax.swing.JComboBox<String> angkaKelas_comboBox;
    private javax.swing.JComboBox<String> bulan_comboBox;
    private javax.swing.ButtonGroup gender_buttonGroup;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JComboBox<String> jurusan_comboBox;
    private javax.swing.JLabel kejuruanKelas_label;
    private javax.swing.JLabel manage_label;
    private javax.swing.JTextField namaLengkap_textField;
    private javax.swing.JTextField nis_textField;
    private javax.swing.JButton simpan_button;
    private javax.swing.JTextField tahun_textField;
    private javax.swing.JComboBox<String> tanggal_comboBox;
    private javax.swing.JComboBox<String> tingkatKelas_comboBox;
    // End of variables declaration//GEN-END:variables
}
